<!--?xml version="1.0" encoding="utf-8"?-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head>
<title>CS415 Programming Assignment 3</title>
<!-- 2017-02-15 Wed 16:33 -->
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="generator" content="Org-mode">
<meta name="author" content="Adam Lewis">
<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center; }
  .todo   { font-family: monospace; color: red; }
  .done   { color: green; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: visible;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline;}
  pre.src-sh:before    { content: 'sh'; }
  pre.src-bash:before  { content: 'sh'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-R:before     { content: 'R'; }
  pre.src-perl:before  { content: 'Perl'; }
  pre.src-java:before  { content: 'Java'; }
  pre.src-sql:before   { content: 'SQL'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.right  { text-align: center;  }
  th.left   { text-align: center;   }
  th.center { text-align: center; }
  td.right  { text-align: right;  }
  td.left   { text-align: left;   }
  td.center { text-align: center; }
  dt { font-weight: bold; }
  .footpara:nth-child(2) { display: inline; }
  .footpara { display: block; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  /*]]>*/-->
</style>
<script type="text/javascript">
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2013 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target = document.getElementById(id);
   if(null != target) {
     elem.cacheClassElem = elem.className;
     elem.cacheClassTarget = target.className;
     target.className = "code-highlighted";
     elem.className   = "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target = document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className = elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className = elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
</head>
<body>
<div id="content">
<h1 class="title">CS415 Programming Assignment 3</h1>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. Overview</a></li>
<li><a href="#sec-2">2. Background</a>
<ul>
<li><a href="#sec-2-1">2.1. Our problem</a></li>
<li><a href="#sec-2-2">2.2. The design of the server component</a></li>
</ul>
</li>
<li><a href="#sec-3">3. Problem statement</a></li>
<li><a href="#sec-4">4. Submitting your program</a></li>
</ul>
</div>
</div>
<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Overview</h2>
<div class="outline-text-2" id="text-1">
<p>
In this assignment, you will implment the first part of a
multi-process, multi-threaded client-server application that allows
one to execute commands remotely, either as themselves or as another
user.  In this assignment, you will write a set of programs that will
allow a user to execute a command in another process running on the
same machine.  You will use the code from Assignment 1 as the starting
point for this program
</p>
</div>
</div>
<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Background</h2>
<div class="outline-text-2" id="text-2">
<p>
The first versions of UNIX to support local area networks provided a
package called <i>rlogin</i> that permitted users to log in on another host
on the network, communicating via TCP/IP over TCP port 513.  One of
the utilities included with the rlogin package was <i>rsh</i>, the remote
shell, which executed shell commands as another user, and on another
computer across a computer network.
</p>

<p>
The <i>rsh</i> application is an example of a <i>client-server</i>
application.  A client program accepts commands from the user,
connects to a program running as <i>daemon</i> on a server,  performs the
service for the client, and returns the result.   In the case of
<i>rsh</i>, the server program is the <i>rshd</i> daemon.  This application
runs in the background and listens for requests from the <i>rsh</i>
client.
</p>
</div>

<div id="outline-container-sec-2-1" class="outline-3">
<h3 id="sec-2-1"><span class="section-number-3">2.1</span> Our problem</h3>
<div class="outline-text-3" id="text-2-1">
<p>
We wish to implement our own simple version of the remote shell.  In
Assignment 3, you implemented the application as a "in-process"
client-server application.  In this assignment, you will modify the
client and server compoents to use shared memory and named-pipes to
communicate with each other.   Note that we will not concern
ourselves at this point with issues of security.
</p>

<p>
You will need to modify the programs from the previous assignment as
follows:  
</p>
<dl class="org-dl">
<dt> client </dt><dd>the client application that will get the command from the
user and pass the command 
to be executed from the command line, parses the command
and puts a binary representation of the parse into a
shared memory segment.   At this point, the client will
listen on the read size of a named pipe to get the output
from the command.  Display this information on standard output.
</dd>

<dt> server </dt><dd>the server application will listen for requests from
clients in shared memory, process these requests when it receives them
from the client, and return data back to the client over
the connection. The server must be able to handle
multiple connections at the same time.
</dd>
</dl>
</div>
</div>
<div id="outline-container-sec-2-2" class="outline-3">
<h3 id="sec-2-2"><span class="section-number-3">2.2</span> The design of the server component</h3>
<div class="outline-text-3" id="text-2-2">
<p>
The client and server need to communicate with each other using
shared memory and named pipes.  For each new request in shared
memory, the server should start up a new thread.  This thread will need
to start a new thread for each command; this thread will need to use
<i>fork()</i> and <i>exec()</i> to launch the new process for the command to be
executed.  You will need to keep track of which client has started
the connection (the contents of the shared memory will need to
include an indication of which client started the process). 
</p>
</div>
</div>
</div>
<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Problem statement</h2>
<div class="outline-text-2" id="text-3">
<p>
Implement this simplified version of remote shell using either C or
C++. You will need to write both the client and server components. 
</p>

<p>
You are required to implement a sufficient test suite to adequately
test your solution.  You must submit this test suite (and supporting
code) as part of your submission.    This also includes providing the
sufficient makefiles and supporting scripts to build your program
from source.
</p>
</div>
</div>
<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> Submitting your program</h2>
<div class="outline-text-2" id="text-4">
<p>
You must document your submission as described in the documentation
and coding guidelines found on the course web page in Blackboard.
Your submission document must be in PDF format; submission of
documents in any other format will result in deduction of points from
your grade.   Attach your submission to the assignment entry in
Blackboard.
</p>
</div>
</div>
</div>
<div id="postamble" class="status">
<p class="date">Date: September 23, 2013</p>
<p class="author">Author: Adam Lewis</p>
<p class="date">Created: 2017-02-15 Wed 16:33</p>
<p class="creator"><a href="http://www.gnu.org/software/emacs/">Emacs</a> 24.5.1 (<a href="http://orgmode.org/">Org</a> mode 8.2.10)</p>
<p class="validation"><a href="http://validator.w3.org/check?uri=referer">Validate</a></p>
</div>


</body></html>