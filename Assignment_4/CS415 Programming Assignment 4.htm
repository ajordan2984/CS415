<!--?xml version="1.0" encoding="utf-8"?-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head>
<title>CS415 Programming Assignment 4</title>
<!-- 2017-02-28 Tue 21:18 -->
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="generator" content="Org-mode">
<meta name="author" content="Adam Lewis">
<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center; }
  .todo   { font-family: monospace; color: red; }
  .done   { color: green; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: visible;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline;}
  pre.src-sh:before    { content: 'sh'; }
  pre.src-bash:before  { content: 'sh'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-R:before     { content: 'R'; }
  pre.src-perl:before  { content: 'Perl'; }
  pre.src-java:before  { content: 'Java'; }
  pre.src-sql:before   { content: 'SQL'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.right  { text-align: center;  }
  th.left   { text-align: center;   }
  th.center { text-align: center; }
  td.right  { text-align: right;  }
  td.left   { text-align: left;   }
  td.center { text-align: center; }
  dt { font-weight: bold; }
  .footpara:nth-child(2) { display: inline; }
  .footpara { display: block; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  /*]]>*/-->
</style>
<script type="text/javascript">
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2013 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target = document.getElementById(id);
   if(null != target) {
     elem.cacheClassElem = elem.className;
     elem.cacheClassTarget = target.className;
     target.className = "code-highlighted";
     elem.className   = "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target = document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className = elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className = elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
</head>
<body>
<div id="content">
<h1 class="title">CS415 Programming Assignment 4</h1>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. Overview</a></li>
<li><a href="#sec-2">2. Background</a>
<ul>
<li><a href="#sec-2-1">2.1. Our problem</a></li>
</ul>
</li>
<li><a href="#sec-3">3. Problem statement</a></li>
<li><a href="#sec-4">4. Submitting your program</a></li>
</ul>
</div>
</div>
<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Overview</h2>
<div class="outline-text-2" id="text-1">
<p>
In this assignment, you will write a client-server application with a
big surprise: a backdoor entry that allows a remote user to go surfing
around on a compromised server.
</p>
</div>
</div>
<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Background</h2>
<div class="outline-text-2" id="text-2">
<p>
In information security, a Remote Access Trojan (RAT) is trojan-horse
style program where a seemingly innocuous program has a some extra
code that allows a remote user to get remote shell access to a
victim's machine.  These program will run over some well-known socket
and try to mask the network traffic as common traffic such as http
traffic.
</p>

<p>
These programs need to do as much as possible to mask their presence
on the host system.   So, they will use the host operating system's
process control functions to make it difficult to identify the source
of the traffic.
</p>
</div>
<div id="outline-container-sec-2-1" class="outline-3">
<h3 id="sec-2-1"><span class="section-number-3">2.1</span> Our problem</h3>
<div class="outline-text-3" id="text-2-1">
<p>
In lecture, we demonstrated a simple echo server that established a
socket connection that was used to echo back to the user the contents
of any message sent by the client.  Your problem is to add a "nice"
feature to this program to allow a user to start a command-line shell
on the host machine.  Modify the source code from the lecture so that
when the client sends the command "pwn<sub>me</sub>" to server, all further
commands from the client will be treated as shell commands on the
server.  Return back to normal operation when the user enters the
"exit" command in the client (i.e., return to just echoing output).
</p>

<p>
You code must support multiple connections to the server.  This means
that the server has to keep track of multiple sockets: one to listen
for new connections and then a socket pair per connection to which
you direct output from the server (either echo or standard output
from running shell commands).
</p>

<p>
On the server, the naive approach would be to use the <i>system()</i>
system call to execute the command sent from the client.  This works
but leaves too much information available for a security analyst to
detect what program is doing the malicious deeds.    Instead, use the
code from the previous assignment and have the server code do a <i>fork()</i>
and <i>exec()</i> to execute the command on the server.   (EXTRA CREDIT:
do what you can to mask the parent process id of the child process.)
</p>
</div>
</div>
</div>
<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Problem statement</h2>
<div class="outline-text-2" id="text-3">
<p>
Implement this simplified version of a RAT using either C or
C++.  You are required to implement a sufficient test suite to adequately
test your solution.  You must submit this test suite (and supporting
code) as part of your submission.    This also includes providing the
sufficient makefiles and supporting scripts to build your program
from source.
</p>
</div>
</div>
<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> Submitting your program</h2>
<div class="outline-text-2" id="text-4">
<p>
Your submission document must be in PDF format; submission of
documents in any other format will result in deduction of points from
your grade.   Attach your submission to the assignment entry in
Blackboard.
</p>
</div>
</div>
</div>
<div id="postamble" class="status">
<p class="author">Author: Adam Lewis</p>
<p class="date">Created: 2017-02-28 Tue 21:18</p>
<p class="creator"><a href="http://www.gnu.org/software/emacs/">Emacs</a> 25.1.1 (<a href="http://orgmode.org/">Org</a> mode 8.2.10)</p>
<p class="validation"><a href="http://validator.w3.org/check?uri=referer">Validate</a></p>
</div>


</body></html>